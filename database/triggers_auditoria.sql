-- Criação da tabela de auditoria
CREATE TABLE AUDITORIA_DIMENSOES (
    ID_AUDITORIA NUMBER GENERATED ALWAYS AS IDENTITY,
    TABELA VARCHAR2(30),
    CHAVE VARCHAR2(50),
    DATA_OPERACAO DATE,
    USUARIO VARCHAR2(30),
    OPERACAO VARCHAR2(20),
    CONSTRAINT PK_AUDITORIA PRIMARY KEY (ID_AUDITORIA)
);

-- Trigger para auditoria da dimensão DIM_TEMPO
CREATE OR REPLACE TRIGGER TRG_AUDITORIA_DIM_TEMPO
AFTER INSERT ON DIM_TEMPO
FOR EACH ROW
BEGIN
    INSERT INTO AUDITORIA_DIMENSOES (
        TABELA,
        CHAVE,
        DATA_OPERACAO,
        USUARIO,
        OPERACAO
    ) VALUES (
        'DIM_TEMPO',
        'ID_TEMPO = ' || :NEW.ID_TEMPO,
        SYSDATE,
        USER,
        'INSERT'
    );
EXCEPTION
    WHEN OTHERS THEN
        DBMS_OUTPUT.PUT_LINE('Erro na auditoria de DIM_TEMPO: ' || SQLERRM);
END TRG_AUDITORIA_DIM_TEMPO;
/

-- Trigger para auditoria da dimensão DIM_CLIENTE
CREATE OR REPLACE TRIGGER TRG_AUDITORIA_DIM_CLIENTE
AFTER INSERT ON DIM_CLIENTE
FOR EACH ROW
BEGIN
    INSERT INTO AUDITORIA_DIMENSOES (
        TABELA,
        CHAVE,
        DATA_OPERACAO,
        USUARIO,
        OPERACAO
    ) VALUES (
        'DIM_CLIENTE',
        'COD_CLIENTE = ' || :NEW.COD_CLIENTE,
        SYSDATE,
        USER,
        'INSERT'
    );
EXCEPTION
    WHEN OTHERS THEN
        DBMS_OUTPUT.PUT_LINE('Erro na auditoria de DIM_CLIENTE: ' || SQLERRM);
END TRG_AUDITORIA_DIM_CLIENTE;
/

-- Trigger para auditoria da dimensão DIM_VENDEDOR
CREATE OR REPLACE TRIGGER TRG_AUDITORIA_DIM_VENDEDOR
AFTER INSERT ON DIM_VENDEDOR
FOR EACH ROW
BEGIN
    INSERT INTO AUDITORIA_DIMENSOES (
        TABELA,
        CHAVE,
        DATA_OPERACAO,
        USUARIO,
        OPERACAO
    ) VALUES (
        'DIM_VENDEDOR',
        'COD_VENDEDOR = ' || :NEW.COD_VENDEDOR,
        SYSDATE,
        USER,
        'INSERT'
    );
EXCEPTION
    WHEN OTHERS THEN
        DBMS_OUTPUT.PUT_LINE('Erro na auditoria de DIM_VENDEDOR: ' || SQLERRM);
END TRG_AUDITORIA_DIM_VENDEDOR;
/

-- Trigger para auditoria da dimensão DIM_LOCALIZACAO
CREATE OR REPLACE TRIGGER TRG_AUDITORIA_DIM_LOCALIZACAO
AFTER INSERT ON DIM_LOCALIZACAO
FOR EACH ROW
BEGIN
    INSERT INTO AUDITORIA_DIMENSOES (
        TABELA,
        CHAVE,
        DATA_OPERACAO,
        USUARIO,
        OPERACAO
    ) VALUES (
        'DIM_LOCALIZACAO',
        'SEQ_ENDERECO_CLIENTE = ' || :NEW.SEQ_ENDERECO_CLIENTE,
        SYSDATE,
        USER,
        'INSERT'
    );
EXCEPTION
    WHEN OTHERS THEN
        DBMS_OUTPUT.PUT_LINE('Erro na auditoria de DIM_LOCALIZACAO: ' || SQLERRM);
END TRG_AUDITORIA_DIM_LOCALIZACAO;
/

-- Trigger para auditoria da dimensão DIM_PRODUTO
CREATE OR REPLACE TRIGGER TRG_AUDITORIA_DIM_PRODUTO
AFTER INSERT ON DIM_PRODUTO
FOR EACH ROW
BEGIN
    INSERT INTO AUDITORIA_DIMENSOES (
        TABELA,
        CHAVE,
        DATA_OPERACAO,
        USUARIO,
        OPERACAO
    ) VALUES (
        'DIM_PRODUTO',
        'COD_PRODUTO = ' || :NEW.COD_PRODUTO,
        SYSDATE,
        USER,
        'INSERT'
    );
EXCEPTION
    WHEN OTHERS THEN
        DBMS_OUTPUT.PUT_LINE('Erro na auditoria de DIM_PRODUTO: ' || SQLERRM);
END TRG_AUDITORIA_DIM_PRODUTO;
/

-- Exemplo de inserção de dados para testar a auditoria
INSERT INTO DIM_CLIENTE (COD_CLIENTE, NOME_CLIENTE, PERFIL_CONSUMO) VALUES (10001, 'Teste Cliente', 'Médio');
INSERT INTO DIM_VENDEDOR (COD_VENDEDOR, NOME_VENDEDOR) VALUES (101, 'Teste Vendedor');
INSERT INTO DIM_LOCALIZACAO (SEQ_ENDERECO_CLIENTE, ESTADO, CIDADE) VALUES (501, 'SP', 'São Paulo');
INSERT INTO DIM_PRODUTO (COD_PRODUTO, NOME_PRODUTO, CATEGORIA, PRECO) VALUES (1001, 'Teste Produto', 'Teste', 99.90);